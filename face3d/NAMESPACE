export(
  approximatelandmarks.face3d,
  arclength.face3d,
  area.face3d,
  as.face3d,
  asymmetry.face3d,
  centre.face3d,
  center.face3d,
  closest.face3d,
  closestcontrol.face3d,
  closestcurve.face3d,
  compare.face3d,
  connected.face3d,
  crossproduct,
  cutface.face3d,
  dissect.face3d,
  distance.face3d,
  edges.face3d,
  edist.face3d,
  editlandmarks.face3d,
  extract.face3d,
  facecurves.face3d,
  # findlandmarks.face3d,
  gcurvature.face3d,
  ginvtps.face3d,
  gpa.face3d,
  gpca.face3d,
  index.face3d,
  interp.barycentric,
  is.face3d,
  mesh.face3d,
  mode.face3d,
  model.face3d,
  midline.face3d,
  normals.face3d,
  opa.face3d,
  orient.face3d,
  pca.face3d,
  planepath.face3d,
  plot.face3d,
  plotpca.face3d,
  plotpcalmks.face3d,
  prepare_mesh.face3d,
  procrustes.face3d,
  ps.matrices,
  read.face3d,
  render.face3d,
  resample.face3d,
  resizejpg.face3d,
  ridge2d.face3d,
  rotate.face3d,
  rp.shapeindex,
  sicolour.face3d,
  sicolor.face3d,
  slidingcurves.face3d,
  slidingmesh.face3d,
  smooth.face3d,
  smoothpath.ridge.face3d,
  subset.face3d,
  subspaces.face3d,
  summary.face3d,
  translate.face,
  trimimage.face3d,
  warp.face3d,
  write.face3d
)

S3method("plot",    "face3d")
S3method("subset",  "face3d")
S3method("summary", "face3d")
S3method("write",   "face3d")

importFrom("grDevices", "col2rgb", "dev.new", "dev.off", "jpeg", "rgb",
           "tiff", "topo.colors")
importFrom("graphics", "abline", "identify", "image", "lines", "par",
           "persp", "plot", "points", "title")
importFrom("stats", "approx", "cov", "lsfit", "mahalanobis", "prcomp",
           "predict", "qchisq", "quantile", "sd", "smooth.spline",
           "spline", "uniroot", "var")
importFrom("utils", "write.table")
